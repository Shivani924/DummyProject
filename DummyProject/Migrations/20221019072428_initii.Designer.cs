// <auto-generated />
using System;
using DummyProject.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DummyProject.Migrations
{
    [DbContext(typeof(LoginContext))]
    [Migration("20221019072428_initii")]
    partial class initii
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("DummyProject.Models.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("First_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Last_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Phone_No")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserName");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            Id = 101,
                            Address = "India",
                            First_Name = "Shivi",
                            Last_Name = "Vani",
                            Phone_No = 999,
                            UserName = "user123"
                        });
                });

            modelBuilder.Entity("DummyProject.Models.LoanDetail", b =>
                {
                    b.Property<int>("LoanId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LoanId"), 1L, 1);

                    b.Property<string>("Admin_UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<float>("Amount")
                        .HasColumnType("real");

                    b.Property<string>("LoanType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("LoanId");

                    b.HasIndex("Admin_UserName");

                    b.ToTable("LoanDetails");

                    b.HasData(
                        new
                        {
                            LoanId = 45,
                            Admin_UserName = "Admin123",
                            Amount = 30000f,
                            LoanType = "Home Loan"
                        });
                });

            modelBuilder.Entity("DummyProject.Models.Login", b =>
                {
                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Username");

                    b.ToTable("Logins");

                    b.HasData(
                        new
                        {
                            Username = "user123",
                            Password = "abcd",
                            Role = "user"
                        },
                        new
                        {
                            Username = "Admin123",
                            Password = "abcde",
                            Role = "admin"
                        });
                });

            modelBuilder.Entity("DummyProject.Models.UserLoan", b =>
                {
                    b.Property<int>("UserLoanId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserLoanId"), 1L, 1);

                    b.Property<int?>("LoanNo")
                        .HasColumnType("int");

                    b.Property<string>("LoanStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Phone_No")
                        .HasColumnType("int");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("UserLoanId");

                    b.HasIndex("LoanNo");

                    b.HasIndex("UserId");

                    b.ToTable("UserLoans");

                    b.HasData(
                        new
                        {
                            UserLoanId = 1,
                            LoanNo = 45,
                            LoanStatus = "Pending",
                            Phone_No = 0,
                            UserId = 101
                        });
                });

            modelBuilder.Entity("DummyProject.Models.Customer", b =>
                {
                    b.HasOne("DummyProject.Models.Login", "login")
                        .WithMany()
                        .HasForeignKey("UserName");

                    b.Navigation("login");
                });

            modelBuilder.Entity("DummyProject.Models.LoanDetail", b =>
                {
                    b.HasOne("DummyProject.Models.Login", "login")
                        .WithMany()
                        .HasForeignKey("Admin_UserName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("login");
                });

            modelBuilder.Entity("DummyProject.Models.UserLoan", b =>
                {
                    b.HasOne("DummyProject.Models.LoanDetail", "loanDetail")
                        .WithMany()
                        .HasForeignKey("LoanNo");

                    b.HasOne("DummyProject.Models.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("Customer");

                    b.Navigation("loanDetail");
                });
#pragma warning restore 612, 618
        }
    }
}
